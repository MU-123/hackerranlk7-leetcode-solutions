import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    static String pmix(String s, int k) {
       
        int n = s.length();
        int[]  arrCode = new int[n];
        for (int i=0; i<n;i++){
            switch(s.charAt(i)){
                case 'A': arrCode[i] = 0; break;
                case 'B': arrCode[i] = 1; break;
                case 'C': arrCode[i] = 2; break;
                case 'D': arrCode[i] = 3; break;
            }
        }
        int[][] modify = {{0,1,2,3},{1,0,3,2},{2,3,0,1},{3,2,1,0}};
        
        for (int j = Integer.highestOneBit(k); k>0; k-=j, j=Integer.highestOneBit(k)){
            int[]  arrCode2 = new int[n];
            for (int l=0,shift2 = j%n; l<n; l++, shift2++){
                if (shift2>=n)shift2 = 0;
                arrCode2[l]=modify[arrCode[l]][arrCode[shift2]];  
            } 
            arrCode = arrCode2;
        }
        
        String[] maping = {"A","B","C","D"};
        String[] resChar = new String[n];
        for (int i =0;i<n;i++) {
            resChar[i]=maping[arrCode[i]];
        }
        String res= String.join("",resChar);
       
        return res;

    }
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nk = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nk[0].trim());

        int k = Integer.parseInt(nk[1].trim());

        String s = scanner.nextLine();

        String result = pmix(s, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedWriter.close();
    }
}
