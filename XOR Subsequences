import java.io.*;
import java.util.*;

public class Solution {

  // TODO XOR Subsequences

  static final int LOGM = 16;
  static final int M = 1 << LOGM;

  static void walsh_dit2(long[] c) {
    for (int m = 2; m <= M; m *= 2) {
      int mh = m / 2;
      for (int i = 0; i < M; i += m) {
        for (int j = 0; j < mh; j++) {
          long x = c[i + j], y = c[i + j + mh];
          c[i + j] = x + y;
          c[i + j + mh] = x - y;
        }
      }
    }
  }

  static void arith(long[] c) {
    for (int m = 2; m <= M; m *= 2) {
      int mh = m / 2;
      for (int i = 0; i < M; i += m)
        for (int j = 0; j < mh; j++) {
          long x = c[i + j];
          long y = c[i + j + mh];
          c[i + j] = x;
          c[i + j + mh] = x + y;
        }
    }
  }

  static void arith_minus(long[] c) {
    for (int m = 2; m <= M; m *= 2) {
      int mh = m / 2;
      for (int i = 0; i < M; i += m)
        for (int j = 0; j < mh; j++) {
          long x = c[i + j];
          long y = c[i + j + mh];
          c[i + j] = x;
          c[i + j + mh] = y - x;
        }
    }
  }

  static void xorConvolution(long[] c) {
    walsh_dit2(c);
    for (int i = 0; i < M; i++) {
      c[i] *= c[i];
    }
    walsh_dit2(c);
    for (int i = 0; i < M; i++) {
      c[i] /= M;
    }
  }

  static void orConvolution(long[] c) {
    arith(c);
    for (int i = 0; i < M; i++) {
      c[i] *= c[i];
    }
    arith_minus(c);
  }

  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    BufferedWriter bw = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));


    StringTokenizer st = new StringTokenizer(br.readLine());
    int n = Integer.parseInt(st.nextToken());
    int acc = 0;
    long[] c = new long[M];
    c[0]++;

    for (int i = 0; i < n; i++) {
      st = new StringTokenizer(br.readLine());
      acc ^= Integer.parseInt(st.nextToken());
      c[acc]++;
    }
    xorConvolution(c);
    int pos = 0;
    long y = 0;
    for (int i = 1; i < M; i++) {
      if (c[i] > y) {
        y = c[i];
        pos = i;
      }
    }
    y /= 2;
    bw.write("" + pos + " " + y);
    bw.newLine();

    bw.close();
    br.close();
  }
}
